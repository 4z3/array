#! /bin/sh

##
# Array constructor
#
# Eats up all arguments and returns a newline-separated string
array () {
  for i; do
    echo "$i"
  done
}

##
# Get length of array
#
# Pipe your array in:
#   echo "$ary" | array_len
array_len () {
  wc -l
}

##
# Element accessor
#
# Uses first argument as (zero-based) index.
#
# Exit status:
#    0  Success.
#   >0  An error occurred.
#
# Pipe your array in:
#   echo "$ary" | array_nth $index
array_nth () {
  printf '%d' "$1" >/dev/null 2>&1 \
    && awk -v i=$1 '
        BEGIN { code=1 }
        NR == i + 1 { print $0; code=0 }
        END { exit code }
      '
}

##
# Get the first index of an element
#
# Exit status:
#   0  Success.
#  >1  Element not found
#
# Pipe your array in:
#   echo "$ary" | array_indexof $element
array_indexof() {
  i=$((-1 + $(sed -n "/^$(echo "$1" | sed -e 's/[]\/$*.^|[]/\\&/g')$/=" | head -n 1 | grep .)))
  echo $i
}

